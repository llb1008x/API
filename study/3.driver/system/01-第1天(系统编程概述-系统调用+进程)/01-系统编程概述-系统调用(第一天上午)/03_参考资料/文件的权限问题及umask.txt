普通文件默认是644 也就是: 
-rw-r--r-- 1 root root 0 May15 20:04 test 
自已有读写(rw),同组人员有读(r),其它有读(r) 
默认权限可通过umask 修改 
默认umask 为022 
文件:666 - 022 = 644 
目录:777 - 022 = 755 
如果你下了umask 044 的指令，则生成的文件目录权限
就变成: 
文件:666 - 044 = 622 
目录:777 - 044 = 733


r(Read，读取)：对文件而言，具有读取文件内容的权限；对目录来说，具有浏览
目 录的权限。 

w(Write,写入)：对文件而言，具有新增、修改文件内容的权限；对目录来说，
具有删除、移动目录内文件的权限。

x(eXecute，执行)：对文件而言，具有执行文件的权限；对目录了来说该用户
具有进入目录的权限。

s或S（SUID,Set UID）：小写s表示能执行，大写S表示不能执行

可执行的文件搭配这个权限，便能得到特权，
任意存取该文件的所有者能使用的全部系统资源。请注意具备SUID权限的文件，
黑客经常利用这种权限，以SUID配上root帐号拥有者，无声无息地在系统中
开扇后门，供日后进出使用。
Why we need suid,how do we use suid?

         r    --     读访问 
　　  w   --    写访问 
　　  x    --    执行许可 
　　   s    --   SUID/SGID 
　　   t     --   sticky位  
                        
 那么 suid/sgid是做什么的？ 为什么会有suid位呢？
 要想明白这个，先让我们看个问题：如果让每个用户更改自己的密码？
 用户修改密码，是通过运行命令passwd来实现的。最终必须要修改/etc/passwd文件，
 而passwd的文件的属性是：
  #ls -l /etc/passwd
 -rw-r--r--    1 root     root         2520 Jul 12 18:25 passwd
 
我们可以看到passwd文件只有对于root用户是可写的，而对于所有的他用户来说都是没有写权限的。 那么一个普通的用户如何能够通过运行passwd命令修改这个passwd文件呢？ 
为了解决这个问题，SUID/SGID便应运而生。而且AT&T对它申请了专利。 呵呵。

SUID和SGID是如何解决这个问题呢？
 首先，我们要知道一点：进程在运行的时候，有一些属性，其中包括 实际用户ID,实际组ID,有效用户ID,有效组ID等。 实际用户ID和实际组ID标识我们是谁，谁在运行这个程序,一般这2个字段在登陆时决定，在一个登陆会话期间， 这些值基本上不改变。

而有效用户ID和有效组ID则决定了进程在运行时的权限。内核在决定进程是否有文件存取权限时， 是采用了进程的有效用户ID来进行判断的。
 
 知道了这点，我们来看看SUID的解决途径：
 当一个程序设置了为SUID位时，内核就知道了运行这个程序的时候，应该认为是文件的所有者在运行这个程序。即该程序运行的时候，有效用户ID是该程序的所有者。举个例子： 
 [root@sgrid5 bin]# ls -l passwd
 -r-s--s--x    1 root     root        16336 Feb 14  2003 passwd

虽然你以test登陆系统，但是当你输入passwd命令来更改密码的时候，由于passwd设置了SUID位，因此虽然进程的实际用户ID是test对应的ID，但是进程的有效用户ID则是passwd文件的所有者root的ID,因此可以修改/etc/passwd文件。



T或T（Sticky）：小写t表示能执行，大写T表示不能执行
/tmp和 /var/tmp目录供所有用户暂时存取文件，亦即每位用
户皆拥有完整的权限进入该目录，去浏览、删除和移动文件。

R,W,X是基本权限 S,T是特殊权限.
各权限位代表的数字值：
	R:4
	W:2
	X:1
	suid:4
	sgid:2
	sticky:1

当使用特殊权限位时chmod的用法：
例：
chmod 7000 后的权限：---S--S--T
chmod 7755 后的权限：-rwsr-sr-t
