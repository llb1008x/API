    函数printk的使用方法和printf相似，它用于内核打印消息。printk根据日志级别（loglevel）对消息进行分类。日志级别用宏定义，日志级别宏展开为一个字符串，在编译时由预处理器将它和消息文本拼接成一个字符串，因此printk 函数中日志级别宏和格式字符串间不能有逗号。


include/linux/kernel.h文件中有日志级别的定义，如下：

	#define	KERN_EMERG	"<0>"	/* system is unusable			*/
	#define	KERN_ALERT	"<1>"	/* action must be taken immediately	*/
	#define	KERN_CRIT	"<2>"	/* critical conditions			*/
	#define	KERN_ERR	"<3>"	/* error conditions			*/
	#define	KERN_WARNING	"<4>"	/* warning conditions			*/
	#define	KERN_NOTICE	"<5>"	/* normal but significant condition	*/
	#define	KERN_INFO	"<6>"	/* informational			*/
	#define	KERN_DEBUG	"<7>"	/* debug-level messages			*/

/kernel/printk.c文件中有两个宏：
	1.#define DEFAULT_MESSAGE_LOGLEVEL 4 	/* KERN_WARNING */
	介绍：当使用printk函数未指定日志级别时，即printk("...")，采用该宏作为默认打印级别（默认级别为4，警告级别）
		

	2.#define DEFAULT_CONSOLE_LOGLEVEL 7 	/* anything MORE serious than KERN_DEBUG */
	介绍：控制台默认日志级别，当printk函数的打印级别高于下面宏定义的级别时，打印内容显示到终端上（控制台），否则录入到日志文件中，可以通过/proc/kmsg文件查看信息，命令为#cat /proc/kmsg




$:查看当前系统的日志级别:
	[root@sunplusedu drv_demo_edu]#cat /proc/sys/kernel/printk
	7			4				1			7
	控制台默认日志级别	printk函数未指定时默认打印级别	最小允许日志级别	引导时的默认日志级别
		