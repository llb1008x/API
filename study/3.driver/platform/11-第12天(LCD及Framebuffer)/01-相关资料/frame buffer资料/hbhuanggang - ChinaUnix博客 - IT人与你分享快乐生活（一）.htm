<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0067)http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786942 -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=GBK">

<meta name="description" content="">
<meta name="keywords" content="">
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7">
<title> hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活</title>

<script type="text/javascript" async="" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/ga.js"></script><script language="javascript" type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/script_cookie.js"></script>
<script language="javascript" type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/script_common.js"></script>
<script language="javascript" type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/script_menu.js"></script>
<script language="javascript" type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/script_ajax.js"></script>
<script language="javascript" type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/script_face.js"></script>
<script language="javascript" type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/script_manage.js"></script>
<link rel="StyleSheet" href="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/style.css" type="text/css" media="screen">
<link rel="StyleSheet" href="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/default.css" type="text/css" media="screen">
</head>
<body><link href="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/jiathis_share.css" rel="stylesheet" type="text/css"><iframe style="position: absolute; opacity: 0; display: none; " frameborder="0"></iframe><div id="ckepop" style="position: absolute; z-index: 1000000000; top: 50%; left: 50%; overflow-x: auto; overflow-y: auto; display: none; "></div><div id="ckepop" style="position: absolute; z-index: 1000000000; display: none; overflow-x: auto; overflow-y: auto; "></div><iframe style="display: none; " frameborder="0" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/jiathis_utility.htm"></iframe>

<style type="text/css">
@import url(http://blog.chinaunix.net/css/nav.css);
</style>

<div class="login">
<div class="Content">
<div class="l1" id="ll">

<a href="http://www.chinaunix.net/" target="_blank">CU首页</a>
<a href="http://blog.chinaunix.net/link.php?url=http://bbs.chinaunix.net" title="CU论坛" target="_blank">CU论坛首页</a>
<a href="http://blog.chinaunix.net/link.php?url=http://blog.chinaunix.net" title="CU博客" target="_blank">CU博客首页</a>   ┊ 
<a href="http://blog.chinaunix.net/do.php?ac=819edd0a745efc58097086a9ef2fc155">登录</a>
<a href="http://blog.chinaunix.net/do.php?ac=8f442ba1e0c79cd3efcd1fd42b8aad8e">注册</a>
   ┊    
<a href="http://blog.chinaunix.net/network.php">随便看看</a>
</div>
<div class="r1">
<form action="http://blog.chinaunix.net/cp.php" method="get">
    <input type="hidden" name="ac" id="ac" value="search">
<input type="submit" class="btn1" style="margin-bottom:0px;" value="">
<select name="searchType" id="searchType" style="line-height: 13px;margin-bottom:0px;padding:0px;height:21px;">
<option value="blog">博文</option>
<option value="friend">博主</option>
<option value="album">相册</option>
<option value="poll">投票</option>
<option value="event">活动</option>
</select>
<input type="hidden" value="hbhuanggang" name="username">
<input type="text" class="inp1" name="searchkey" id="searchkey" style="margin-bottom:0px;">
<a href="http://blog.chinaunix.net/cp.php?ac=blog" class="a1">发博文</a>
</form>
</div>
</div>
</div>

<ul id="ucappmenu_menu" class="dropmenu_drop" style="display:none;">
<li><a href="http://blog.chinaunix.net/link.php?url=http://bbs.chinaunix.net" title="CU论坛" target="_blank">CU论坛首页</a></li>
<li><a href="http://blog.chinaunix.net/link.php?url=http://blog.chinaunix.net" title="CU博客" target="_blank">CU博客首页</a></li>
</ul>


<div id="append_parent" style="z-index:99999;"></div>
<div id="ajaxwaitid"></div>
<span id="pageSet"></span>
<div class="Content" id="Content">
<div class="top" id="top" style=" position:relative;">
    <div class="tm"><a href="http://blog.chinaunix.net/link.php?url=http%3A%2F%2Fblog.chinaunix.net%2Fspace.php%3Fuid%3D26299858%26do%3Dblog%26id%3D2977055%26stats%3Dclick" target="_blank">公告：缅怀Dennis Ritchie活动开赛啦！</a></div>
<div class="addr">
       			<b id="home_title">hbhuanggang</b>
   	 <p>
<a href="http://blog.chinaunix.net/space.php?uid=22174347">http://blog.chinaunix.net/space.php?uid=22174347</a>
</p>
<span id="blog_brief">
<span id="blog_b"></span>&nbsp;&nbsp;&nbsp;
</span>
<div id="blog_brief_form" style="display:none; height:auto;">
 		<form id="brief_form" method="post" action="http://blog.chinaunix.net/do.php?ac=ajax&op=blog_brief">
              			<input type="text" id="blog_brief" name="blog_brief" value="" size="50" style="margin-bottom:0px;">
             			<input type="button" onclick="checkBbrief();" value="提交" class="submit" style="height:20px;margin-bottom:0px;">&nbsp;
            			<input type="hidden" name="formhash" value="3190e1cf">
              			<input type="button" value="取消" class="submit" style="height:20px;margin-bottom:0px;" onclick="s(&#39;blog_brief&#39;);h(&#39;blog_brief_form&#39;);">
             		 </form>
</div>
              
</div>
<div class="daoh">
<a href="http://blog.chinaunix.net/space.php?uid=22174347">首页</a> | 
<a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&view=me&frmd=-1" class="here" ;="">博文目录</a>  |  
<a href="http://blog.chinaunix.net/space.php?do=album&view=me&uid=22174347">相册</a>  |  
<a href="http://blog.chinaunix.net/group.php" target="_blank">博客圈</a>  |
<a href="http://blog.chinaunix.net/space.php?do=profile&uid=22174347">关于我</a>  |
<a href="http://blog.chinaunix.net/space.php?do=profile&uid=22174347#comment">留言</a>
</div>
</div>
<link href="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/fck_editorarea.css" rel="stylesheet" type="text/css">
<div class="l2 ">	
<!-- 个人资料 -->
<div class="bor1 mt10" id="profile">
<div class="tit1">个人资料</div>
<div class="Img"><a href="http://blog.chinaunix.net/space.php?uid=22174347"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/noavatar_big.gif" onerror="this.onerror=null;this.src=&#39;http://bbs.chinaunix.net/uc_server/images/noavatar_big.gif&#39;"></a></div>
<div class="Text">
<div class="p1">
<a href="http://blog.chinaunix.net/space.php?uid=22174347">hbhuanggang</a>
   		   		</div>
<div class="p3" style="height:38px;">
 <a href="http://blog.chinaunix.net/space.php?do=doing&view=me&uid=22174347" target="_blank">微博</a>
 <a href="http://blog.chinaunix.net/link.php?url=http://bbs.chinaunix.net%2F" target="_blank">论坛</a>
</div>
<div class="p3"> 
 <a href="http://blog.chinaunix.net/cp.php?ac=pm&uid=22174347" id="a_pm" onclick="ajaxmenu(event, this.id, 1)">发纸条</a> 
 <a href="http://blog.chinaunix.net/cp.php?ac=poke&op=send&uid=22174347" id="a_poke" onclick="ajaxmenu(event, this.id, 1)">打招呼</a>
 <span id="attention"><a href="javascript:;" onclick="attention(22174347 , &#39;add&#39;);">加关注</a></span>
   <a href="http://blog.chinaunix.net/cp.php?ac=friend&op=add&uid=22174347" id="a_friend_li" onclick="ajaxmenu(event, this.id, 1)">加好友</a>
 </div>

<div class="list1">
<ul>
<li>博客访问：441767</li>
<li>博文数量：55</li>
<li>博客积分：6031</li>
<li>博客等级：<a href="http://blog.chinaunix.net/cp.php?ac=credit&op=usergroup">准将</a> </li>
<li>关注人气： 8</li>
<li>注册时间：2009-07-23 10:09:46</li>
</ul>
</div>
</div>
</div>

<!-- 文章分类 -->
<div class="bor1 mt10" id="blist">
<div class="tit1">文章分类</div>
<div class="allla">
<div class="alll"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&view=me&frmd=-1">全部博文<b>(55)</b></a></div>
<div class="alll1"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/list41.gif" id="79951" onclick="opDIV(this.id);" style="cursor:pointer;"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79951&view=me" title="嵌入式Linux+ARM">嵌入式Linux+ARM(53)</a></div>
<div style="display:none;" id="DIV_79951" class="alll3">
<div class="alll4"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/list3.gif"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79956&view=me&fup=79951" title="嵌入式Linux+ARM">其他电子通讯技术篇(2)</a></div>
<div class="alll4"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/list3.gif"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79952&view=me&fup=79951" title="嵌入式Linux+ARM">内核、驱动开发篇(24)</a></div>
<div class="alll4"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/list3.gif"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79954&view=me&fup=79951" title="嵌入式Linux+ARM">内核、文件系统、应用移植开发篇(12)</a></div>
<div class="alll4"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/list3.gif"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79955&view=me&fup=79951" title="嵌入式Linux+ARM">Bootloader移植篇(6)</a></div>
<div class="alll4"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/list3.gif"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79953&view=me&fup=79951" title="嵌入式Linux+ARM">基础篇(4)</a></div>
</div>
<div class="alll"><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&view=me&frmd=0">未分类博文(2)</a></div>
</div>
</div>
<script>
function opDIV(id){
if(document.getElementById('DIV_'+id).style.display=='none'){
document.getElementById('DIV_'+id).style.display='block';
document.getElementById(id).src="image/list4.gif";
}else{
document.getElementById('DIV_'+id).style.display='none';
document.getElementById(id).src="image/list41.gif";
}
}
</script>


<!-- 订阅我的博客 -->
<div class="bor1 mt10" id="rss">
<div class="tit1">订阅我的博客</div>
<ul class="list3">
<li><a href="http://blog.chinaunix.net/rss.php?uid=22174347"><img alt="订阅" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/feedsky.gif" width="49" height="16"></a></li>
<li><a target="_blank" href="http://www.xianguo.com/subscribe.php?url=http://home.chinaunix.com/rss.php?uid=22174347"><img border="0" alt="订阅到鲜果" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/d2.png"></a></li>
<li><a target="_blank" href="http://www.zhuaxia.com/add_channel.php?url=http://home.chinaunix.com/rss.php?uid=22174347"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/d3.png" width="103" height="16" border="0" alt="订阅到抓虾"></a></li>
<li><a target="_blank" href="http://fusion.google.com/add?feedurl=http://home.chinaunix.com/rss.php?uid=22174347"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/d4.png" width="103" height="16" border="0" alt="订阅到Google"></a></li>
</ul>
</div>


<!-- 好友 -->

<!-- 最近来访 -->
</div>
<div class="r2" id="blog_center">
<!-- 博文 -->
<div class="bor1 mt10">
<div class="tit5"><span>字体大小：<a href="javascript:;" onclick="doZoom(&#39;16&#39;);" id="font_16">大</a> <a href="javascript:;" onclick="doZoom(&#39;14&#39;);" id="font_14" style="font-weight: bold; ">中</a> <a href="javascript:;" onclick="doZoom(&#39;12&#39;);" id="font_12">小</a></span>博文</div>
<div class="text">
<div class="tit6">
<a href="javascript:;">嵌入式Linux之我行――S3C2440上LCD驱动(FrameBuffer)实例开发讲解（一）</a> 
(2010-03-01 10:47)
</div>
<div class="tit7">
分类： <a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&frmd=79951&classid=79952&view=me">内核、驱动开发篇</a>
</div>
<div id="detail" class="detail" style="line-height: 1.3;"><p></p><div>
<div>嵌入式Linux之我行，主要讲述和总结了本人在学习嵌入式linux中的每个步骤。一为总结经验，二希望能给想入门嵌入式Linux的朋友提供方便。如有错误之处，谢请指正。</div>
<ul>
<li><font size="2"><font face="楷体">共享资源</font>，欢迎转载：</font><a href="http://blog.chinaunix.net/link.php?url=http://hbhuanggang.cublog.cn%2F"><font color="#0000ff" size="2">http://hbhuanggang.cublog.cn</font></a> </li></ul>
<p><strong><font size="3">一、开发环境</font></strong></p>
<ul>
<li><font size="2">主 &nbsp;机：VMWare--Fedora 9</font> 
</li><li><font size="2">开发板：Mini2440--64MB Nand, Kernel:2.6.30.4</font> 
</li><li><font size="2">编译器：arm-linux-gcc-4.3.2</font></li></ul>
<p><strong><font size="3">二、背景知识</font></strong></p></div>
<div><font size="2"><strong>1. LCD工作的硬件需求：</strong></font></div>
<div>&nbsp;&nbsp; 要使一块LCD正常的显示文字或图像，不仅需要LCD驱动器，而且还需要相应的LCD控制器。在通常情况下，生产厂商把LCD驱动器会以COF/COG的形式与LCD玻璃基板制作在一起，而LCD控制器则是由外部的电路来实现，现在很多的MCU内部都集成了LCD控制器，如S3C2410/2440等。通过LCD控制器就可以产生LCD驱动器所需要的控制信号来控制STN/TFT屏了。</div>
<div>&nbsp;</div>
<div><strong>2. S3C2440内部LCD控制器结构图：</strong></div>
<div><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/101649_100301144252.png"></div>
<div>我们根据数据手册来描述一下这个集成在S3C2440内部的LCD控制器：</div>
<div>a：LCD控制器由REGBANK、LCDCDMA、TIMEGEN、VIDPRCS寄存器组成；</div>
<div>b：REGBANK由17个可编程的寄存器组和一块256*16的调色板内存组成，它们用来配置LCD控制器的；</div>
<div>c：LCDCDMA是一个专用的DMA，它能自动地把在侦内存中的视频数据传送到LCD驱动器，通过使用这个DMA通道，视频数据在不需要CPU的干预的情况下显示在LCD屏上；</div>
<div>d：VIDPRCS接收来自LCDCDMA的数据，将数据转换为合适的数据格式，比如说4/8位单扫，4位双扫显示模式，然后通过数据端口VD[23:0]传送视频数据到LCD驱动器；</div>
<div>e：TIMEGEN由可编程的逻辑组成，他生成LCD驱动器需要的控制信号，比如VSYNC、HSYNC、VCLK和LEND等等，而这些控制信号又与REGBANK寄存器组中的LCDCON1/2/3/4/5的配置密切相关，通过不同的配置，TIMEGEN就能产生这些信号的不同形态，从而支持不同的LCD驱动器(即不同的STN/TFT屏)。</div>
<div>&nbsp;</div>
<div><strong>3. 常见TFT屏工作时序分析：</strong></div>
<div><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/101649_100302095631.png"></div>
<div>LCD提供的外部接口信号： 
<table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="宋体"><font color="#ff0000"><strong>VSYNC/VFRAME/STV：</strong></font>垂直同步信号(TFT)/帧同步信号(STN)/SEC TFT信号；<br><font color="#ff0000"><strong>HSYNC/VLINE/CPV：</strong></font>水平同步信号(TFT)/行同步脉冲信号(STN)/SEC TFT信号；<br><font color="#ff0000"><strong>VCLK/LCD_HCLK：</strong></font>象素时钟信号(TFT/STN)/SEC TFT信号；<br><font color="#ff0000"><strong>VD[23:0]：</strong></font>LCD像素数据输出端口(TFT/STN/SEC TFT)；<br><font color="#ff0000"><strong>VDEN/VM/TP：</strong></font>数据使能信号(TFT)/LCD驱动交流偏置信号(STN)/SEC TFT 信号；<br><font color="#ff0000"><strong>LEND/STH：</strong></font>行结束信号(TFT)/SEC TFT信号；<br><font color="#ff0000"><strong>LCD_LPCOE：</strong></font>SEC TFT OE信号；<br><font color="#ff0000"><strong>LCD_LPCREV：</strong></font>SEC TFT REV信号；<br><font color="#ff0000"><strong>LCD_LPCREVB：</strong></font>SEC TFT REVB信号。</font></span></code></p></td></tr></tbody></table></div>
<div>&nbsp;</div>
<div>所有显示器显示图像的原理都是从上到下，从左到右的。这是什么意思呢？这么说吧，一副图像可以看做是一个矩形，由很多排列整齐的点一行一行组成，这些点称之为像素。那么这幅图在LCD上的显示原理就是： 
<table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="宋体"><font color="#ff0000"><strong>A：</strong></font>显示指针从矩形左上角的第一行第一个点开始，一个点一个点的在LCD上显示，在上面的时序图上用时间线表示就为VCLK，我们称之为像素时钟信号；<br><font color="#ff0000"><strong>B：</strong></font>当显示指针一直显示到矩形的右边就结束这一行，那么这一行的动作在上面的时序图中就称之为1 Line；<br><font color="#ff0000"><strong>C：</strong></font>接下来显示指针又回到矩形的左边从第二行开始显示，注意，显示指针在从第一行的右边回到第二行的左边是需要一定的时间的，我们称之为行切换；<br><font color="#ff0000"><strong>D：</strong></font>如此类推，显示指针就这样一行一行的显示至矩形的右下角才把一副图显示完成。因此，这一行一行的显示在时间线上看，就是时序图上的HSYNC；<br><font color="#ff0000"><strong>E：</strong></font>然而，LCD的显示并不是对一副图像快速的显示一下，为了持续和稳定的在LCD上显示，就需要切换到另一幅图上(另一幅图可以和上一副图一样或者不一样，目的只是为了将图像持续的显示在LCD上)。那么这一副一副的图像就称之为帧，在时序图上就表示为1 Frame，因此从时序图上可以看出1 Line只是1 Frame中的一行；<br><font color="#ff0000"><strong>F：</strong></font>同样的，在帧与帧切换之间也是需要一定的时间的，我们称之为帧切换，那么LCD整个显示的过程在时间线上看，就可表示为时序图上的VSYNC。</font></span></code></p></td></tr></tbody></table></div>
<div>&nbsp;</div>
<div>上面时序图上各时钟延时参数的含义如下：(这些参数的值，LCD产生厂商会提供相应的数据手册) 
<table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="宋体"><strong><font color="#ff0000">VBPD(vertical back porch)：</font></strong>表示在一帧图像开始时，垂直同步信号以后的无效的行数，对应驱动中的upper_margin；<br><font color="#ff0000"><strong>VFBD(vertical front porch)：</strong></font>表示在一帧图像结束后，垂直同步信号以前的无效的行数，对应驱动中的lower_margin；<br><strong><font color="#ff0000">VSPW(vertical sync pulse width)：</font></strong>表示垂直同步脉冲的宽度，用行数计算，对应驱动中的vsync_len；<br><font color="#ff0000"><strong>HBPD(horizontal back porch)：</strong></font>表示从水平同步信号开始到一行的有效数据开始之间的VCLK的个数，对应驱动中的left_margin；<br><strong><font color="#ff0000">HFPD(horizontal front porth)：</font></strong>表示一行的有效数据结束到下一个水平同步信号开始之间的VCLK的个数，对应驱动中的right_margin；<br><strong><font color="#ff0000">HSPW(horizontal sync pulse width)：</font></strong>表示水平同步信号的宽度，用VCLK计算，对应驱动中的hsync_len；</font></span></code></p></td></tr></tbody></table></div>
<div>&nbsp;</div>
<div>对于以上这些参数的值将分别保存到REGBANK寄存器组中的LCDCON1/2/3/4/5寄存器中：(对寄存器的操作请查看S3c2440数据手册LCD部分) 
<table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun">LCDCON1：17&nbsp;- 8位CLKVAL <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;6&nbsp;- 5位扫描模式(对于STN屏:4位单/双扫、8位单扫) <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;- 1位色位模式(1BPP、8BPP、16BPP等)<br><br>LCDCON2：31 - 24位VBPD <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;23 - 14位LINEVAL <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;13 - 6位VFPD <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5 - 0位VSPW<br><br>LCDCON3：25 - 19位HBPD <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18 - 8位HOZVAL <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;7 - 0位HFPD<br><br>LCDCON4： 7 - 0位HSPW<br><br>LCDCON5：</font></span></code></p></td></tr></tbody></table></div>
<div>&nbsp;</div>
<div><strong>4. 帧缓冲(FrameBuffer)：</strong></div>
<div><strong>&nbsp;&nbsp; </strong>帧缓冲是Linux为显示设备提供的一个接口，它把一些显示设备描述成一个缓冲区，允许应用程序通过FrameBuffer定义好的接口访问这些图形设备，从而不用去关心具体的硬件细节。对于帧缓冲设备而言，只要在显示缓冲区与显示点对应的区域写入颜色值，对应的颜色就会自动的在屏幕上显示。下面来看一下在不同色位模式下缓冲区与显示点的对应关系：</div>
<div><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/101649_100302161742.png"></div>
<div><br><font size="3"><font face="宋体">三</font><strong><font face="宋体">、帧缓冲(FrameBuffer)设备驱动结构</font>：</strong></font></div>
<div><strong><font size="3"></font></strong>&nbsp;</div>
<div><font size="3"><strong>&nbsp;&nbsp;&nbsp;&nbsp; </strong></font><font face="宋体" size="2">帧缓冲设备为标准的字符型设备，在Linux中主设备号29，定义在/include/linux/major.h中的FB_MAJOR，次设备号定义帧缓冲的个数，最大允许有32个FrameBuffer，定义在/include/linux/fb.h中的FB_MAX，对应于文件系统下/dev/fb%d设备文件。</font></div>
<p><strong>1. 帧缓冲设备驱动在Linux子系统中的结构如下：</strong><br><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/101649_100301144309.png"><br><font face="宋体" size="2">我们从上面这幅图看，帧缓冲设备在Linux中也可以看做是一个完整的子系统，大体由fbmem.c和xxxfb.c组成。向上给应用程序提供完善的设备文件操作接口(即对FrameBuffer设备进行read、write、ioctl等操作)，接口在Linux提供的fbmem.c文件中实现；向下提供了硬件操作的接口，只是这些接口Linux并没有提供实现，因为这要根据具体的LCD控制器硬件进行设置，所以这就是我们要做的事情了(即xxxfb.c部分的实现)。</font></p>
<p><strong>2. 帧缓冲相关的重要数据结构：</strong><font face="宋体"><br>&nbsp;&nbsp;&nbsp;从帧缓冲设备驱动程序结构看，该驱动主要跟fb_info结构体有关，该结构体记录了帧缓冲设备的全部信息，包括设备的设置参数、状态以及对底层硬件操作的函数指针。在Linux中，每一个帧缓冲设备都必须对应一个fb_info，fb_info在/linux/fb.h中的定义如下：(只列出重要的一些) 
</font></p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> node<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> flags<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_var_screeninfo var<span style="COLOR: #0000cc">;</span><span style="COLOR: #ff9900">/*LCD可变参数结构体*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_fix_screeninfo fix<span style="COLOR: #0000cc">;</span><span style="COLOR: #ff9900">/*LCD固定参数结构体*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_monspecs monspecs<span style="COLOR: #0000cc">;</span>&nbsp;<span style="COLOR: #ff9900">/*LCD显示器标准*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> work_struct <span style="COLOR: #ff0000">queue</span><span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*帧缓冲事件队列*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_pixmap pixmap<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #ff9900">/*图像硬件mapper*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_pixmap sprite<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #ff9900">/*光标硬件mapper*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_cmap cmap<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #ff9900">/*当前的颜色表*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_videomode <span style="COLOR: #0000cc">*</span>mode<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*当前的显示模式*/</span><br><br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">ifdef</span> CONFIG_FB_BACKLIGHT<br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #0000ff">struct</span> backlight_device <span style="COLOR: #0000cc">*</span>bl_dev<span style="COLOR: #0000cc">;<span style="COLOR: #ff9900">/*对应的背光设备</span><font face="NSimsun"><span style="COLOR: #ff9900">*/</span></font></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> mutex bl_curve_mutex<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;u8 bl_curve<span style="COLOR: #0000cc">[</span>FB_BACKLIGHT_LEVELS<span style="COLOR: #0000cc">]</span><span style="COLOR: #0000cc">;<span style="COLOR: #ff9900">/*背光调整</span><font face="NSimsun"><span style="COLOR: #ff9900">*/</span></font></span><br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">endif</span><br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">ifdef</span> CONFIG_FB_DEFERRED_IO<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> delayed_work deferred_work<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_deferred_io <span style="COLOR: #0000cc">*</span>fbdefio<span style="COLOR: #0000cc">;</span><br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">endif</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_ops <span style="COLOR: #0000cc">*</span>fbops<span style="COLOR: #0000cc">; <span style="COLOR: #ff9900">/*对底层硬件操作的函数指针*/</span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> device <span style="COLOR: #0000cc">*</span>device<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> device <span style="COLOR: #0000cc">*</span>dev<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*fb设备*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> class_flag<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">ifdef</span> CONFIG_FB_TILEBLITTING<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_tile_ops <span style="COLOR: #0000cc">*</span>tileops<span style="COLOR: #0000cc">;</span> <span style="COLOR: #ff9900">/*图块Blitting*/</span><br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">endif</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">char</span> __iomem <span style="COLOR: #0000cc">*</span>screen_base<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*虚拟基地址*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">unsigned</span> <span style="COLOR: #0000ff">long</span> screen_size<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*LCD IO映射的虚拟内存大小*/</span> <br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">void</span> <span style="COLOR: #0000cc">*</span>pseudo_palette<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*伪16色颜色表*/</span> <br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">define</span> FBINFO_STATE_RUNNING&nbsp;&nbsp;&nbsp;&nbsp;0<br><span style="COLOR: #0000cc">#</span><span style="COLOR: #ff0000">define</span> FBINFO_STATE_SUSPENDED&nbsp;&nbsp;1<br>&nbsp;&nbsp;&nbsp;&nbsp;u32 state<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;<span style="COLOR: #ff9900">/*LCD的挂起或恢复状态*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">void</span> <span style="COLOR: #0000cc">*</span>fbcon_par<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">void</span> <span style="COLOR: #0000cc">*</span>par<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<br><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span></font></span></code></p></td></tr></tbody></table><p></p><font face="宋体">
<p>其中，比较重要的成员有<font face="新宋体"><span style="COLOR: #0000ff"><font color="#000000">struct</font></span> fb_var_screeninfo var、<span style="COLOR: #0000ff"><font color="#000000">struct</font></span> fb_fix_screeninfo fix和<span style="COLOR: #0000ff"><font color="#000000">struct</font></span> fb_ops <span style="COLOR: #0000cc"><font color="#000000">*</font></span>fbops，他们也都是结构体。下面我们一个一个的来看。</font></p>
<p><font face="新宋体">fb_var_screeninfo结构体主要记录用户可以修改的控制器的参数，比如屏幕的分辨率和每个像素的比特数等，该结构体定义如下： 
</font></p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000ff">struct</span> fb_var_screeninfo <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 xres<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*可见屏幕一行有多少个像素点*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 yres<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*可见屏幕一列有多少个像素点*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 xres_virtual<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*虚拟屏幕一行有多少个像素点*/</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 yres_virtual<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*虚拟屏幕一列有多少个像素点*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 xoffset<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*虚拟到可见屏幕之间的行偏移*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 yoffset<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*虚拟到可见屏幕之间的列偏移*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 bits_per_pixel<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*每个像素的位数即BPP*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 grayscale<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*非0时，指的是灰度*/</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_bitfield red<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*fb缓存的R位域*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_bitfield green<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;<span style="COLOR: #ff9900">/*fb缓存的G位域*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_bitfield blue<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*fb缓存的B位域*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> fb_bitfield transp<span style="COLOR: #0000cc">;</span>&nbsp;<span style="COLOR: #ff9900">/*透明度*/</span>&nbsp;&nbsp;&nbsp;&nbsp;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 nonstd<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/* != 0 非标准像素格式*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 activate<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 height<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*高度*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 width<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*宽度*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 accel_flags<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*定时：除了pixclock本身外，其他的都以像素时钟为单位*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 pixclock<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*像素时钟(皮秒)*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 left_margin<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*行切换，从同步到绘图之间的延迟*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 right_margin<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*行切换，从绘图到同步之间的延迟*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 upper_margin<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*帧切换，从同步到绘图之间的延迟*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 lower_margin<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*帧切换，从绘图到同步之间的延迟*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 hsync_len<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*水平同步的长度*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 vsync_len<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*垂直同步的长度*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 sync<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 vmode<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 <span style="COLOR: #ff0000">rotate</span><span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 reserved<span style="COLOR: #0000cc">[</span>5<span style="COLOR: #0000cc">]</span><span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*保留*/</span><br><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span></font></span></code></p></td></tr></tbody></table><p></p>
<p><font face="新宋体">而fb_fix_screeninfo结构体又主要记录用户不可以修改的控制器的参数，比如屏幕缓冲区的物理地址和长度等，该结构体的定义如下： 
</font></p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000ff">struct</span> fb_fix_screeninfo <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">char</span> id<span style="COLOR: #0000cc">[</span>16<span style="COLOR: #0000cc">]</span><span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*字符串形式的标示符 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">unsigned</span> <span style="COLOR: #0000ff">long</span> smem_start<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*fb缓存的开始位置 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 smem_len<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*fb缓存的长度 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 type<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*看FB_TYPE_* */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 type_aux<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*分界*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 visual<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*看FB_VISUAL_* */</span> <br>&nbsp;&nbsp;&nbsp;&nbsp;__u16 xpanstep<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*如果没有硬件panning就赋值为0 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u16 ypanstep<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*如果没有硬件panning就赋值为0 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u16 ywrapstep<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*如果没有硬件ywrap就赋值为0 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 line_length<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*一行的字节数 */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">unsigned</span> <span style="COLOR: #0000ff">long</span> mmio_start<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*内存映射IO的开始位置*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 mmio_len<span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*内存映射IO的长度*/</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u32 accel<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;__u16 reserved<span style="COLOR: #0000cc">[</span>3<span style="COLOR: #0000cc">]</span><span style="COLOR: #0000cc">;</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/*保留*/</span><br><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span></font></span></code></p></td></tr></tbody></table><p></p></font>
<p>fb_ops结构体是对底层硬件操作的函数指针，该结构体中定义了对硬件的操作有:(这里只列出了常用的操作) 
</p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000ff">struct</span> fb_ops <span style="COLOR: #0000cc">{</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> module <span style="COLOR: #0000cc">*</span>owner<span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//检查可变参数并进行设置</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_check_var<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">struct</span> fb_var_screeninfo <span style="COLOR: #0000cc">*</span>var<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//根据设置的值进行更新，使之有效</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_set_par<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//设置颜色寄存器</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_setcolreg<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">unsigned</span> regno<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">unsigned</span> red<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">unsigned</span> green<span style="COLOR: #0000cc">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">unsigned</span> blue<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">unsigned</span> transp<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//显示空白</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">int</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_blank<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">int</span> blank<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//矩形填充</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">void</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_fillrect<span style="COLOR: #0000cc">)</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">const</span> <span style="COLOR: #0000ff">struct</span> fb_fillrect <span style="COLOR: #0000cc">*</span>rect<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//复制数据</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">void</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_copyarea<span style="COLOR: #0000cc">)</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">const</span> <span style="COLOR: #0000ff">struct</span> fb_copyarea <span style="COLOR: #0000cc">*</span>region<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;</font><font face="NSimsun"><span style="COLOR: #ff9900">//图形填充</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">void</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>fb_imageblit<span style="COLOR: #0000cc">)</span> <span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">struct</span> fb_info <span style="COLOR: #0000cc">*</span>info<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">const</span> <span style="COLOR: #0000ff">struct</span> fb_image <span style="COLOR: #0000cc">*</span>image<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span></font></span></code></p></td></tr></tbody></table><p></p>
<p><strong>3. 帧缓冲设备作为平台设备：</strong><font face="宋体"><br>&nbsp;&nbsp;&nbsp;在S3C2440中，LCD控制器被集成在芯片的内部作为一个相对独立的单元，所以Linux把它看做是一个平台设备，故在内核代码/arch/arm/plat-s3c24xx/devs.c中定义有LCD相关的平台设备及资源，代码如下： 
</font></p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">/* LCD Controller */</font></span></span></code></p>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><font color="#ff9900">//LCD控制器的资源信息</font><br><span style="COLOR: #0000ff">static</span> <span style="COLOR: #0000ff">struct</span> resource s3c_lcd_resource<span style="COLOR: #0000cc">[</span><span style="COLOR: #0000cc">]</span> <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">[</span>0<span style="COLOR: #0000cc">]</span> <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>start <span style="COLOR: #0000cc">=</span> S3C24XX_PA_LCD</font><span style="COLOR: #0000cc"><font face="NSimsun">, </font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//控制器IO端口开始地址</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>end <span style="COLOR: #0000cc">=</span> S3C24XX_PA_LCD <span style="COLOR: #0000cc">+</span> S3C24XX_SZ_LCD <span style="COLOR: #0000cc">-</span> 1</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//控制器IO端口结束地址</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>flags <span style="COLOR: #0000cc">=</span> IORESOURCE_MEM</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//标识为LCD控制器IO端口，在驱动中引用这个就表示引用IO端口</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">[</span>1<span style="COLOR: #0000cc">]</span> <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>start <span style="COLOR: #0000cc">=</span> IRQ_LCD</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//LCD中断</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>end <span style="COLOR: #0000cc">=</span> IRQ_LCD<span style="COLOR: #0000cc">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>flags <span style="COLOR: #0000cc">=</span> IORESOURCE_IRQ</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//标识为LCD中断</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">}</span><br><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span><br><br><span style="COLOR: #0000ff">static</span> u64 s3c_device_lcd_dmamask <span style="COLOR: #0000cc">=</span> 0xffffffffUL<span style="COLOR: #0000cc">;</span><br><br><span style="COLOR: #0000ff">struct</span> platform_device s3c_device_lcd <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>name&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> <span style="COLOR: #ff00ff">"s3c2410-lcd"</span></font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//作为平台设备的LCD设备名</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>id&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">-</span>1<span style="COLOR: #0000cc">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>num_resources&nbsp;<span style="COLOR: #0000cc">=</span> ARRAY_SIZE<span style="COLOR: #0000cc">(</span>s3c_lcd_resource<span style="COLOR: #0000cc">)</span></font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//资源数量</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>resource&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> s3c_lcd_resource</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//引用上面定义的资源</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>dev <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>dma_mask&nbsp;<span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">&amp;</span>s3c_device_lcd_dmamask<span style="COLOR: #0000cc">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>coherent_dma_mask&nbsp;<span style="COLOR: #0000cc">=</span> 0xffffffffUL<br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">}</span><br><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span><br><br>EXPORT_SYMBOL<span style="COLOR: #0000cc">(</span>s3c_device_lcd<span style="COLOR: #0000cc">)</span></font><span style="COLOR: #0000cc"><font face="NSimsun">;</font><span style="COLOR: #000000"><font face="NSimsun" color="#ff9900">//导出定义的LCD平台设备，好在mach-smdk2440.c的smdk2440_devices[]中添加到平台设备列表中</font></span></span></span></code></p></td></tr></tbody></table><br><font face="宋体" size="2">&nbsp;&nbsp; 除此之外，Linux还在/arch/arm/mach-s3c2410/include/mach/fb.h中为LCD平台设备定义了一个s3c2410fb_mach_info结构体，该结构体主要是记录LCD的硬件参数信息(比如该结构体的s3c2410fb_display成员结构中就用于记录LCD的屏幕尺寸、屏幕信息、可变的屏幕参数、LCD配置寄存器等)，这样在写驱动的时候就直接使用这个结构体。下面，我们来看一下内核是如果使用这个结构体的。在/arch/arm/mach-s3c2440/mach-smdk2440.c中定义有：</font> 
<table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">/* LCD driver info */</font></span></span></code></p>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #ff9900">//LCD硬件的配置信息，注意这里我使用的LCD是NEC 3.5寸TFT屏，这些参数要根据具体的LCD屏进行设置</span><br><span style="COLOR: #0000ff">static</span> <span style="COLOR: #0000ff">struct</span> s3c2410fb_display smdk2440_lcd_cfg __initdata <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span></font></span></code></p>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000cc">&nbsp;&nbsp;&nbsp; <span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #ff9900">//这个地方的设置是配置LCD寄存器5，这些宏定义在regs-lcd.h中，计算后二进制为：111111111111，然后对照数据手册上LCDCON5的各位来看，注意是从右边开始</span></font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>lcdcon5&nbsp;<span style="COLOR: #0000cc">=</span> S3C2410_LCDCON5_FRM565 <span style="COLOR: #0000cc">|</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S3C2410_LCDCON5_INVVLINE <span style="COLOR: #0000cc">|</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S3C2410_LCDCON5_INVVFRAME <span style="COLOR: #0000cc">|</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S3C2410_LCDCON5_PWREN <span style="COLOR: #0000cc">|</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; S3C2410_LCDCON5_HWSWP<span style="COLOR: #0000cc">,</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>type&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">=</span> S3C2410_LCDCON1_TFT</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//TFT类型</font></span></span></span><br><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff9900">/* NEC 3.5'' */</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>width&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> 240</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//屏幕宽度</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>height&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> 320</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//屏幕高度</font></span></span></span><br></span></code></p>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun">&nbsp;&nbsp;&nbsp; </font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//以下一些参数在上面的时序图分析中讲到过,各参数的值请跟据具体的LCD屏数据手册结合上面时序分析来设定</font></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>pixclock&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> 100000</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//像素时钟</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>xres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> 240</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//水平可见的有效像素</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>yres&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> 320</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//垂直可见的有效像素</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>bpp&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> 16</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//色位模式</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>left_margin&nbsp;&nbsp;<span style="COLOR: #0000cc">=</span> 19</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//行切换，从同步到绘图之间的延迟</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>right_margin&nbsp;<span style="COLOR: #0000cc">=</span> 36</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//行切换，从绘图到同步之间的延迟</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>hsync_len&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">=</span> 5</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//水平同步的长度</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>upper_margin&nbsp;<span style="COLOR: #0000cc">=</span> 1</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//帧切换，从同步到绘图之间的延迟</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>lower_margin&nbsp;<span style="COLOR: #0000cc">=</span> 5</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//帧切换，从绘图到同步之间的延迟</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>vsync_len&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">=</span> 1</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//垂直同步的长度</font></span></span></span><br><font face="NSimsun"><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span><br><br><span style="COLOR: #0000ff">static</span> <span style="COLOR: #0000ff">struct</span> s3c2410fb_mach_info smdk2440_fb_info __initdata <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>displays&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc">=</span> <span style="COLOR: #0000cc">&amp;</span>smdk2440_lcd_cfg</font><span style="COLOR: #0000cc"><font face="NSimsun">,</font><span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//应用上面定义的配置信息</font></span></span></span><br><font face="NSimsun">&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>num_displays&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">=</span> 1<span style="COLOR: #0000cc">,</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">.</span>default_display <span style="COLOR: #0000cc">=</span> 0<span style="COLOR: #0000cc">,</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span>gpccon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><font color="#ff0000">=</font></span> 0xaaaa555a<span style="COLOR: #0000cc"><font color="#ff0000">,<span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//将GPC0、GPC1配置成LEND和VCLK，将GPC8-15配置成VD0-7,其他配置成普通输出IO口</font></span></span></font></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpccon_mask&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0xffffffff<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,</font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpcup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0x0000ffff<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,<span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//禁止GPIOC的上拉功能</font></span></span></font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpcup_mask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0xffffffff<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,</font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpdcon&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0xaaaaaaaa<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,<span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//将GPD0-15配置成VD8-23</font></span></span></font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpdcon_mask&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0xffffffff<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,</font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpdup&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0x0000ffff<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,<span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//禁止GPIOD的上拉功能</font></span></span></font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">.</font></span></span>gpdup_mask&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0xffffffff<span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">,</font></span></span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc"><font color="#ff0000">.</font></span>lpcsel&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #0000cc"><span style="COLOR: #0000cc"><font color="#ff0000">=</font></span></span> 0x0<span style="COLOR: #0000cc"><font color="#ff0000">,<span style="COLOR: #000000"><span style="COLOR: #ff9900"><font face="NSimsun">//这个是三星TFT屏的参数，这里不用</font></span></span></font></span><br></font><span style="COLOR: #0000cc">}</span><span style="COLOR: #0000cc">;</span></font></span></code></p></td></tr></tbody></table><p></p>
<p>注意：可能有很多朋友不知道上面红色部分的参数是做什么的，其值又是怎么设置的？其实它是跟你的开发板LCD控制器密切相关的，看了下面两幅图相信就大概知道他们是干什么用的：</p>
<p><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/101649_100406200249.png"></p>
<p><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/101649_100406200349.png"></p>
<p>上面第一幅图是开发板原理图的LCD控制器部分，第二幅图是S3c2440数据手册中IO端口C和IO端口D控制器部分。原理图中使用了GPC8-15和GPD0-15来用做LCD控制器VD0-VD23的数据端口，又分别使用GPC0、GPC1端口用做LCD控制器的LEND和VCLK信号，对于GPC2-7则是用做STN屏或者三星专业TFT屏的相关信号。然而，S3C2440的各个IO口并不是单一的功能，都是复用端口，要使用他们首先要对他们进行配置。所以上面红色部分的参数就是把GPC和GPD的部分端口配置成LCD控制功能模式。</p>
<p><font face="宋体" size="2">&nbsp;&nbsp; 从以上讲述的内容来看，要使LCD控制器支持其他的LCD屏，重要的是根据LCD的数据手册修改以上这些参数的值。下面，我们再看一下在驱动中是如果引用到s3c2410fb_mach_info结构体的(注意上面讲的是在内核中如何使用的)。在mach-smdk2440.c中有： 
</font></p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #ff9900">//S3C2440初始化函数</span><br><span style="COLOR: #0000ff">static</span> <span style="COLOR: #0000ff">void</span> __init smdk2440_machine_init<span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">void</span><span style="COLOR: #0000cc">)</span><br><span style="COLOR: #0000cc">{</span></font></span></code></p>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000cc">&nbsp;&nbsp;&nbsp; <span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #ff9900">//调用该函数将上面定义的LCD硬件信息保存到平台数据中</span></font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;<font color="#ff0000">s3c24xx_fb_set_platdata<span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">&amp;</span>smdk2440_fb_info<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br></font>&nbsp;&nbsp;&nbsp;&nbsp;<br>&nbsp;&nbsp;&nbsp;&nbsp;s3c_i2c0_set_platdata<span style="COLOR: #0000cc">(</span><span style="COLOR: #ff0000"><font color="#0000ff">NULL</font></span><span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;platform_add_devices<span style="COLOR: #0000cc">(</span>smdk2440_devices<span style="COLOR: #0000cc">,</span> ARRAY_SIZE<span style="COLOR: #0000cc">(</span>smdk2440_devices<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;smdk_machine_init<span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br><span style="COLOR: #0000cc">}</span></font></span></code></p></td></tr></tbody></table><p></p>
<p><font face="新宋体">s3c24xx_fb_set_platdata定义在</font><font face="宋体">plat-s3c24xx/devs.c中： 
</font></p><table style="BORDER-COLLAPSE: collapse" bordercolor="#999999" cellspacing="0" cellpadding="0" width="95%" bgcolor="#f1f1f1" border="1">
<tbody>
<tr>
<td>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000ff">void</span> __init s3c24xx_fb_set_platdata<span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">struct</span> s3c2410fb_mach_info <span style="COLOR: #0000cc">*</span>pd<span style="COLOR: #0000cc">)</span><br><span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">struct</span> s3c2410fb_mach_info <span style="COLOR: #0000cc">*</span>npd<span style="COLOR: #0000cc">;</span><br><br>&nbsp;&nbsp;&nbsp;&nbsp;npd <span style="COLOR: #0000cc">=</span> kmalloc<span style="COLOR: #0000cc">(</span><span style="COLOR: #0000ff">sizeof</span><span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>npd<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">,</span> GFP_KERNEL<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000ff">if</span> <span style="COLOR: #0000cc">(</span>npd<span style="COLOR: #0000cc">)</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #ff0000"><font color="#000000">memcpy</font></span><span style="COLOR: #0000cc">(</span>npd<span style="COLOR: #0000cc">,</span> pd<span style="COLOR: #0000cc">,</span> <span style="COLOR: #0000ff">sizeof</span><span style="COLOR: #0000cc">(</span><span style="COLOR: #0000cc">*</span>npd<span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span></font></span></code></p>
<p style="MARGIN: 5px; LINE-HEIGHT: 150%"><code><span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #0000cc">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style="COLOR: #000000"><font face="NSimsun"><span style="COLOR: #ff9900">//这里就是将内核中定义的<font face="宋体" color="#ff9900">s3c2410fb_mach_info结构体数据保存到LCD平台数据中，所以在写驱动的时候就可以直接在平台数据中获取s3c2410fb_mach_info结构体的数据(即LCD各种参数信息)进行操作</font></span></font></span></span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;s3c_device_lcd<span style="COLOR: #0000cc">.</span>dev<span style="COLOR: #0000cc">.</span>platform_data <span style="COLOR: #0000cc">=</span> npd<span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">}</span> <span style="COLOR: #0000ff">else</span> <span style="COLOR: #0000cc">{</span><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printk<span style="COLOR: #0000cc">(</span>KERN_ERR <span style="COLOR: #ff00ff">"no memory for LCD platform data\n"</span><span style="COLOR: #0000cc">)</span><span style="COLOR: #0000cc">;</span><br>&nbsp;&nbsp;&nbsp;&nbsp;<span style="COLOR: #0000cc">}</span><br><span style="COLOR: #0000cc">}</span></font></span></code></p></td></tr></tbody></table><p></p>
<p><font face="宋体">&nbsp;&nbsp; 这里再讲一个小知识：不知大家有没有留意，在平台设备驱动中，platform_data可以保存各自平台设备实例的数据，但这些数据的类型都是不同的，为什么都可以保存？这就要看看platform_data的定义，定义在/linux/device.h中，void *platform_data是一个void类型的指针，在Linux中void可保存任何数据类型。</font><br></p><br><br>
<div></div>
<p><font face="宋体"><strong>未完，<font color="#ff0000">下接：</font></strong></font><a href="http://blog.chinaunix.net/link.php?url=http://blog.chinaunix.net%2Fu3%2F101649%2Fshowart_2209169.html" target="_blank"><font face="宋体" color="#ff0000"><strong>S3C2440上LCD驱动(FrameBuffer)实例开发详解（二）</strong></font></a></p>
<p>&nbsp;</p>
<div></div>
<div></div><p></p></div>
</div>
<div class="cont5">
<div class="t">我的更多文章</div>
<ul>
<li><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=2305655">博客已升级，请注意变更地址</a>  (2011-07-29 16:41:44)</li>
<li><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786959">Linux poll机制分析</a>  (2011-07-05 16:06:21)</li>
<li><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786958">嵌入式Linux之我行--内核I2C子系统详解</a>  (2011-05-13 11:44:57)</li>
<li><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786957">Linux内核的cpufreq(变频)机制</a>  (2011-05-12 16:23:24)</li>
<li><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786956">最近更新</a>  (2010-11-22 15:54:40)</li>
<li><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786955">嵌入式Linux之我行――u-boot-2009.08在2440上的移植详解（六）</a>  (2010-11-16 16:45:33)</li>
	
</ul>
</div>

<div class="cont6">
<!-- 分享 -->
<div class="fx">
<div class="icon">										 
<!-- JiaThis Button BEGIN -->
<div id="ckepop">
<a href="http://blog.chinaunix.net/link.php?url=http://www.jiathis.com%2Fshare%2F" class="jiathis jiathis_txt jtico jtico_jiathis" target="_blank">分享到：</a>
<a class="jiathis_button_tsina" title="分享到新浪微博"><span class="jiathis_txt jiathis_separator jtico jtico_tsina">新浪微博</span></a>
<a class="jiathis_button_qzone" title="分享到QQ空间"><span class="jiathis_txt jiathis_separator jtico jtico_qzone">QQ空间</span></a>
<a class="jiathis_button_kaixin001" title="分享到开心网"><span class="jiathis_txt jiathis_separator jtico jtico_kaixin001">开心网</span></a>
<a class="jiathis_button_douban" title="分享到豆瓣"><span class="jiathis_txt jiathis_separator jtico jtico_douban">豆瓣</span></a>
<a class="jiathis_button_renren" title="分享到人人网"><span class="jiathis_txt jiathis_separator jtico jtico_renren">人人网</span></a>
<a class="jiathis_button_twitter" title="分享到Twitter"><span class="jiathis_txt jiathis_separator jtico jtico_twitter">twitter</span></a>
<a class="jiathis_button_fb" title="分享到Facebook"><span class="jiathis_txt jiathis_separator jtico jtico_fb">fb</span></a>
</div>
<script type="text/javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/jia.js" charset="utf-8"></script>
<!-- JiaThis Button END -->
</div>

<span style="cursor:pointer;">
<a id="support">0</a>
<br>
<a onclick="ajaxmenu(event, this.id,0, 2000, &#39;doSupport&#39;)" id="click_blogid_1786942" href="http://blog.chinaunix.net/cp.php?ac=click&op=add&clickid=4&idtype=blogid&id=1786942&hash=6d655a812ae76a969f50e809f21f5327">
&nbsp;&nbsp;&nbsp;<b>顶</b>
</a>
</span>
<div class="clear"></div>
</div>



<!-- 阅读 -->

<div class="read">
<a href="javascript:;">阅读<b>(6433)</b></a>┊ <a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786942#comment">评论 <b>(<span id="comm_num">3</span>)</b></a>┊<a href="http://blog.chinaunix.net/cp.php?ac=favorites&op=addfavorites&blogid=1786942" id="a_favorite" onclick="ajaxmenu(event, this.id, 1)">收藏(0)</a>┊<a href="http://blog.chinaunix.net/cp.php?ac=common&op=report&idtype=blogid&id=1786942" id="a_report" onclick="ajaxmenu(event, this.id, 1)">举报</a>┊<a href="javascript:window.print();">打印</a>
</div>

<div class="next1">前一篇：<a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786941">嵌入式Linux之我行――S3C2440上触摸屏驱动实例开发讲解</a></div>

<!-- 评论 -->
<div class="tit8" id="comment_dv">
<span><a href="http://blog.chinaunix.net/space.php?uid=22174347&do=blog&id=1786942#comment">[发评论]</a></span>
<b>评论</b>&nbsp;重要提示：警惕虚假中奖信息!
</div>
<div id="comment" class="comments_list">
<div class="box_content">
<ul class="post_list a_list justify_list" id="comment_ul">
<li id="comment_520278_li" class="space cont7 "><div class="avatar48"><a href="http://blog.chinaunix.net/space.php?uid=26304240"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/40_avatar_small.jpg" onerror="this.onerror=null;this.src=&#39;http://bbs.chinaunix.net/uc_server/images/noavatar_small.gif&#39;"></a></div>
<div class="title">
<a href="http://blog.chinaunix.net/space.php?uid=26304240" id="author_520278">liutaolinux</a> 
<span class="gray">2011-10-03 10:19</span>

</div>

<div class="detail" id="comment_520278"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/18.gif" class="face"></div>

</li><li id="comment_213884_li" class=" cont7 "><div class="avatar48"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/hidden.gif" class="avatar"></div>
<div class="title">
chinaunix网友
<span class="gray">2010-07-20 10:30</span>

</div>

<div class="detail" id="comment_213884">楼主，你好，按照MINI2440的原理图，用到了VM，VLINE，VFRAME ,VCLK,
没有LEDN，那么我们应该配置GPC2，3，4为第三功能吧。。为什么这里只配了GPC0，1呢。。谢谢解答。</div>

</li><li id="comment_214015_li" class=" cont7 "><div class="avatar48"><img src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/hidden.gif" class="avatar"></div>
<div class="title">
chinaunix网友
<span class="gray">2010-04-02 16:06</span>

</div>

<div class="detail" id="comment_214015">纯顶技术强贴</div>

</li></ul>
</div>
</div>
<div class="clear"></div>

<!-- 发评论 -->
<div class="logins">亲，您还没有登录,请<a href="http://blog.chinaunix.net/do.php?ac=819edd0a745efc58097086a9ef2fc155">[登录]</a>或<a href="http://blog.chinaunix.net/do.php?ac=8f442ba1e0c79cd3efcd1fd42b8aad8e">[注册]</a>后再进行评论</div>
</div>
</div>
</div>

<div class="clear"></div>
</div>
<script type="text/javascript">
<!--
var blogid = 1786942;
var bloguid = 0;
function doSupport(){
var x = new Ajax();
x.get('do.php?ac=ajax&op=support&id='+blogid , function(s){
document.getElementById('support').innerHTML = s;
});
}

function checkComment(id){

//	if(bloguid < 1 &&  ($('nim').checked == false) ){
//		alert('请选择匿名发表评论！');
//		return false;
//	}
if(trim($('seccode').value) == ''){
alert('验证码不能为空！');
return false;
}
s('comment_dv');
ajaxpost('quickcommentform_'+id, 'comment_add');
$('seccode').value = '';
var img = 'do.php?ac=seccode&rand='+Math.random();
$('img_seccode').src = img;
}
$('font_14').style.fontWeight='bold';
function doZoom(s){
$('font_12').style.fontWeight='normal';
$('font_14').style.fontWeight='normal';
$('font_16').style.fontWeight='normal';
$('font_'+s).style.fontWeight='bold';
s = s + 'px';
$('detail').style.fontSize = s;
}
//-->
</script>
<div id="footer">
<div class="l">
<a href="http://blog.chinaunix.net/link.php?url=http://www.chinaunix.net%2Fabout%2Findex.shtml">关于我们</a> | 
<a href="http://blog.chinaunix.net/link.php?url=http://www.it168.com%2Fbottomfile%2Fit168.shtml">关于IT168</a> | 
<a href="http://blog.chinaunix.net/link.php?url=http://www.chinaunix.net%2Fabout%2Fconnect.html">联系方式</a> | 
<a href="http://blog.chinaunix.net/link.php?url=http://www.chinaunix.net%2Fabout%2Fservice.html">广告合作</a> | 
<a href="http://blog.chinaunix.net/link.php?url=http://blog.chinaunix.net%2Fabout%2Ffl.html">法律声明</a> | 
<a href="http://blog.chinaunix.net/link.php?url=http://blog.chinaunix.net%2Fregister.php">免费注册</a> 
<address>
Copyright &#169; 2001-2010 ChinaUnix.net All Rights Reserved 北京皓辰网域网络信息技术有限公司. 版权所有 
</address>
</div>
<div class="r">
感谢所有关心和支持过ChinaUnix的朋友们<br>京ICP证041476号 京ICP证060528号
</div>
<div class="clear"></div>
</div>
<div id="dialogBoxShadow" style="display:none;z-index:49;"></div>
<input id="dot" value="" type="hidden">
<script type="text/javascript">
<!--
if($('dot').value == 'theme')  getPageSet();
function checkHtitle(){
var tt = $('spacetitle').value;
if(ttlen(trim(tt)) > 48){
alert('博客宣言不能超过48个字符！');
return false;
}
ajaxpost('home_from','homeTitle');
}
function checkBbrief(){
var tt = $('blog_brief').value;
if(ttlen(trim(tt)) > 200){
alert('个性签名不能超过200个字符！');
return false;
}
ajaxpost('brief_form','blogBrief');
}
function homeTitle()
{
var spacetitle_value = $('spacetitle').value;
if(!spacetitle_value){
spacetitle_value = '还没有博客宣言';
}
var x = new Ajax();
x.get('/do.php?ac=ajax&op=htl', function(s){
document.getElementById('home_t').innerHTML = s
});
s('home_title');
h('home_title_form');
}
function blogBrief()
{
var spacetitle_value = $('blog_brief').value;
if(!spacetitle_value){
spacetitle_value = '还没有个性签名';
}
var x = new Ajax();
x.get('/do.php?ac=ajax&op=bbf', function(s){
document.getElementById('blog_b').innerHTML = s
});
s('blog_brief');
h('blog_brief_form');
}
//-->
</script>
<script language="javascript" src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/pv.js"></script>
<script type="text/javascript">
    function sendPV(){
        var pvTrack = new PvTrack();
        pvTrack.type = 35; // 频道类别ID
        pvTrack.channel = 189; // 频道ID
        pvTrack.pageType = 0;
        pvTrack.track();
    }
    window.setTimeout("sendPV()", 0); 

</script>
<script type="text/javascript">

  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-20237423-2']);
  _gaq.push(['_setDomainName', '.chinaunix.net']);
  _gaq.push(['_trackPageview']);

  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();

</script>
<div style="display:none">
<script type="text/javascript"> 
var _bdhmProtocol = (("https:" == document.location.protocol) ? " https://" : " http://");
document.write(unescape("%3Cscript src='" + _bdhmProtocol + "hm.baidu.com/h.js%3F0ee5e8cdc4d43389b3d1bfd76e83216b' type='text/javascript'%3E%3C/script%3E"));
</script><script src="./hbhuanggang - ChinaUnix博客 - IT人与你分享快乐生活_files/h.js" type="text/javascript"></script>
</div>

 

</body></html>